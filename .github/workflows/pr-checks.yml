name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

env:
  GO_VERSION: "1.25.1"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: ${{ env.GO_VERSION }}
        cache-dependency-path: go.sum

    - name: Get dependencies
      run: |
        go mod download
        go mod verify

    - name: Run go fmt check
      run: |
        fmt_output=$(go fmt ./...)
        if [ -n "$fmt_output" ]; then
          echo "The following files need formatting:"
          echo "$fmt_output"
          exit 1
        fi

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage
      if: success()
      uses: codecov/codecov-action@v5
      with:
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install golangci-lint
        run: |
          # Install golangci-lint from source to ensure Go 1.25.1 compatibility
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

  license:
    name: License Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check license headers
        run: |
          # Check if LICENSE file exists
          if [ ! -f "LICENSE" ]; then
            echo "ERROR: LICENSE file not found"
            exit 1
          fi

          # Verify it's Apache 2.0
          if ! grep -q "Apache License" LICENSE; then
            echo "ERROR: LICENSE file should contain Apache License 2.0"
            exit 1
          fi

          echo "License check passed"

  build-test:
    name: Build Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64, 386]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Test Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: |
          go build -o /tmp/hyprmon-test

  check-docs:
    name: Documentation Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check README
        run: |
          if [ ! -f "README.md" ]; then
            echo "ERROR: README.md not found"
            exit 1
          fi

          # Check for required sections
          for section in "Installation" "Usage" "Features" "License"; do
            if ! grep -q "## $section" README.md; then
              echo "WARNING: README.md should have a '## $section' section"
            fi
          done

          echo "Documentation check completed"
